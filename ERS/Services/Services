using DataAccess;
using Models;

namespace Servcices
{
    
/// <summary>
/// 
/// </summary>
public class Ticket
{

    /// <summary>
    /// Method to submit a ticket, which returns a unique ID
    /// </summary>
    /// <param name="amount"></param>
    /// <param name="description"></param>
    /// <param name="submitDate"></param>
    /// <param name="expenseDate"></param>
    /// <param name="status"></param>
    /// <returns></returns>
    public static void SubmitTicket(string amount, string description, string submitDate, string expenseDate, int status)
    {
        TicketObj a = new TicketObj(amount, description, submitDate, expenseDate, status = 1);

    }


    /// <summary>
    /// Employee View Submitted Ticket Method
    /// </summary>
    /// <param name="ticketID"></param>
    /// <param name="status"></param>
    public string viewTicketStatus(int ticketID, int status)
    {
        
        switch (status)
        {
            case 1:
                    return "Ticket Status: Pending";
            break;
            case 2: 
                    return "Ticket Status: Approved";
            break;
            case 3:
                    return "Ticket Status: Denied";
            break;
                
        }

    }

/// <summary>
/// 
/// </summary>
public class Manager
{
    /// <summary>
    /// 
    /// </summary>
    /// <typeparam name="Manager"></typeparam>
    /// <returns></returns>
    List<Manager> AllManagers = new List<Manager>();

    /// <summary>
    /// 
    /// </summary>
    /// <param name="IsManager"></param>
    /// <returns></returns>
    public bool CheckManager(bool IsManager)
    {
        if (IsManager)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }
    /// <summary>
    /// Manager Processing Ticket Method
    /// </summary>
    /// <param name="IsManager"></param>
    /// <returns></returns>
    static void ProcessTicket(bool IsManager)
    {
        
    }

}

public class LoginRegister
{
    List<string> allUsernames = new List<string>();
    List<string> allPasswords = new List<string>();
    public string LoginMethod(string usernameLogin, string passwordLogin)
    {
        return "Logged In!";
    }

    /// <summary>
    /// Creates a new account for a user and validates the username and password length
    /// </summary>
    /// <param name="usernameRegister"></param>
    /// <param name="passwordRegister"></param>
     public string RegisterUser(string usernameRegister, string passwordRegister)
    {

         if (usernameRegister.Length >= 1 && usernameRegister.Length <= 10 && passwordRegister.Length >= 5 && passwordRegister.Length <= 10)
                {
                    return "Username or password invalid. Username must be 1-10 characters and password must be 5-10 characters.";

                }
                else
                {
                    return  "User Registered!";
                }
            
    }
}
}
}
