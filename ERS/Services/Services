using Models;

namespace Servcices
{
    
/// <summary>
/// 
/// </summary>
public class Ticket
{

    private string? amount;
    private string? description;
    private string? submitDate;
    private string? expenseDate;
    private int? status;

        public int? Status { get => status; set => status = value; }
        public string? ExpenseDate { get => expenseDate; set => expenseDate = value; }

        /// <summary>
        /// Method to submit a ticket, which returns a unique ID
        /// </summary>
        /// <param name="amount"></param>
        /// <param name="description"></param>
        /// <param name="submitDate"></param>
        /// <param name="expenseDate"></param>
        /// <param name="status"></param>
        /// <returns></returns>
        public static void SubmitTicket(string amount, string description, string submitDate, string expenseDate, int status)
    {
        TicketObj a = new TicketObj(amount, description, submitDate, expenseDate, status = 1);

    }

    /// <summary>
    /// Employee View Submitted Ticket Method
    /// </summary>
    /// <param name="ticketID"></param>
    /// <param name="status"></param>
    public string viewTicketStatus(int ticketID, int status)
    {
        
        switch (status)
        {

            case 1: 
                    return $"Ticket {ticketID} Status: Approved";
            break;
            case 2:
                    return $"Ticket {ticketID} Status: Denied";
            break;
            default:
                    return $"Ticket {ticketID} Status: Pending";
            break;
        }

    }

/// <summary>
/// 
/// </summary>
public class Manager
{
    /// <summary>
    /// 
    /// </summary>
    /// <typeparam name="Manager"></typeparam>
    /// <returns></returns>
    List<Manager> AllManagers = new List<Manager>();

    /// <summary>
    /// 
    /// </summary>
    /// <param name="IsManager"></param>
    /// <returns></returns>
    public bool CheckManager(bool IsManager)
    {
        if (IsManager)
        {
            return true;
        }
        else
        {
            return false;
        }
        
    }
    /// <summary>
    /// Manager Processing Ticket Method
    /// </summary>
    /// <param name="IsManager"></param>
    /// <returns></returns>
    public void ProcessTicket(bool IsManager, string amount, int status)
    {
        try
        {
            int Amount = Int32.Parse(amount);
            Console.WriteLine(Amount);
        }
        catch (FormatException)
        {
            Console.WriteLine($"Unable to parse '{amount}'");
        }

       /*  if (status == 1 && amount < 200 && IsManager)
        {
            status = 2;
            System.Console.WriteLine("Reimbursement Approved!");

        }
        else if (status == 1 && amount >= 200 && IsManager)
        {
            status = 3;
            System.Console.WriteLine("Reimbursement Denied!");
        }
        else 
        {
            status = 1;
            System.Console.WriteLine("Reimbursement pending. Must be approved by a manager.");
        } */
    }

}

}
}
