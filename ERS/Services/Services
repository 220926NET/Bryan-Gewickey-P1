

namespace TicketServcice
{

public class Ticket
{

    

    public Ticket(string amount, string description, int TicketID)
    {
        
    }

    //Ticket example = new Ticket();

    // Method to submit a ticket, which returns a unique ID
    public static int SubmitTicket(string amount, string description)
    {
        Random Random = new Random();
        int ticketID = Random.Next(0, int.MaxValue);
        
        
        
        return ticketID;
    }
    // Employee View Submitted Ticket Method
    public static void viewTicketStatus(int ticketID)
    {
        throw new NotImplementedException();
    }
    // Manager Processing Ticket Method
    public static void ProcessTicket()
    {
        throw new NotImplementedException();
    }


public class ManagerTicketPro
{
    static string ApproveTicket(bool IsManager)
    {
        string result;
        if (IsManager == true)
        {
            Console.WriteLine("Ticket approved!");
            result = "Approved";
        } else 
        {
            Console.WriteLine("Please enter Manager password if you are a manager.");
            result = "Denied";
        }
        
        return result;
    }
}
public class AuthService : IUserAuthentification
{

}

}

public class Login
{
    public virtual string UserLogin(string usernameLogin)
    {
        //foreach (string ele in AllUsernames)
        
        throw new NotImplementedException();
    }
}

public class Register
{
    public static void RegisterUser()
    {
        throw new NotImplementedException();
    }
}

public interface IUserAuthentification
{


}
public class ManagerLogin : Login
{


 public override string UserLogin(string usernameLogin)
 {
    // if (login == Manager.Username.get && pWord == Manager.Password.get)
    throw new NotImplementedException();
 }     
}



}